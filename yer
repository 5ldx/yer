local FOV = 90
local RUN_SERVICE = game:GetService("RunService")
local USER_INPUT_SERVICE = game:GetService("UserInputService")
local PLAYERS = game:GetService("Players")
local CAMERA = game.Workspace.CurrentCamera

local fovRing = Drawing.new("Circle")
fovRing.Visible = true
fovRing.Thickness = 2
fovRing.Color = Color3.fromRGB(128, 0, 128)
fovRing.Filled = false
fovRing.Radius = FOV
fovRing.Position = CAMERA.ViewportSize / 2

local aimAssistActive = false
local lockedTarget = nil

local function updateFOVRing()
    fovRing.Position = CAMERA.ViewportSize / 2
end

local function predictPosition(position, velocity, time)
    return position + velocity * time
end

local function getClosestPlayerInFOV(targetPartName)
    local nearestPlayer = nil
    local closestDistance = math.huge
    local playerMousePos = CAMERA.ViewportSize / 2

    for _, player in ipairs(PLAYERS:GetPlayers()) do
        if player ~= PLAYERS.LocalPlayer and player.Character then
            local targetPart = player.Character:FindFirstChild(targetPartName)

            if targetPart then
                local screenPosition, isVisible = CAMERA:WorldToViewportPoint(targetPart.Position)
                local distance = (Vector2.new(screenPosition.x, screenPosition.y) - playerMousePos).Magnitude

                if distance < closestDistance and isVisible and distance < FOV then
                    closestDistance = distance
                    nearestPlayer = player
                end
            end
        end
    end

    return nearestPlayer
end

USER_INPUT_SERVICE.InputBegan:Connect(function(input, gameProcessed)
    if not gameProcessed and input.KeyCode == Enum.KeyCode.X then
        aimAssistActive = not aimAssistActive
        if not aimAssistActive then
            lockedTarget = nil
            print("Aim Assist Deactivated")
        else
            print("Aim Assist Activated")
        end
    end

    if input.KeyCode == Enum.KeyCode.Delete then
        RUN_SERVICE:UnbindFromRenderStep("FOVUpdate")
        fovRing:Remove()
        fovRing = nil
    end
end)

RUN_SERVICE.RenderStepped:Connect(function()
    updateFOVRing()

    if aimAssistActive then
        if not lockedTarget or not lockedTarget.Character or not lockedTarget.Character:FindFirstChild("Head") then
            lockedTarget = getClosestPlayerInFOV("Head")
        end

        if lockedTarget and lockedTarget.Character then
            local headPosition = lockedTarget.Character.Head.Position
            local velocity = lockedTarget.Character.HumanoidRootPart.Velocity
            local timeToHit = (headPosition - CAMERA.CFrame.Position).Magnitude / 2000 
            local predictedPosition = predictPosition(headPosition, velocity, timeToHit)

            local lookVector = (predictedPosition - CAMERA.CFrame.Position).unit
            CAMERA.CFrame = CFrame.new(CAMERA.CFrame.Position, CAMERA.CFrame.Position + lookVector)
        else
            lockedTarget = nil
        end
    end
end)
